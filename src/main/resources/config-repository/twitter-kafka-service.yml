spring:
  application:
    name: TwitterDataStreamService

twitter-to-kafka:
  twitter-keywords:
    - Java
    - Microservices
    - Kafka
    - ElasticSearch
  enable-v2-tweets: false
  enable-mock-tweets: true
  twitter-v2-base-url: https://api.twitter.com/2/tweets/search/stream?tweet.fields=created_at&expansions=author_id
  twitter-v2-rules-base-url: https://api.twitter.com/2/tweets/search/stream/rules
  twitter-v2-bearer-token: 3220172988-HipzVoDnMx8aab1EhyIvOqMZbHzSYWQJhj85hiJ
  mock-min-tweet-length: 5
  mock-max-tweet-length: 15
  mock-sleep-ms: 10000

  # retry-config
  initial-interval-ms: 1000
  max-interval-ms: 10000
  multiplier: 2.0
  maxAttempts: 3
  sleep-time-ms: 2000

  # kafka-config
  bootstrap-servers: localhost:29092
  #schema-registry-url-key: schema.registry.url
  #schema-registry-url: http://localhost:8081
  #  topic-name: twitterTopic
  #  topic-names-to-create:
  #    - twitterTopic
  #  num-of-partitions: 1
  #  replication-factor: 1

  #kafka-producer-config

  key-serializer-class: org.apache.kafka.common.serialization.LongSerializer
  value-serializer-class: io.confluent.kafka.serializers.KafkaAvroSerializer
#  compression-type: snappy
#  acks: all
#  batch-size: 16384
#  batch-size-boost-factor: 100
#  linger-ms: 5
#  request-timeout-ms: 60000
#  retry-count: 5

logging:
  level:
    com.scaler.project.twitterdatastreamservice.*: debug
    org.springframework.*: debug
    org.apache.kafka.*: info